#
# Copyright (c) 2019-2020 P3TERX <https://p3terx.com>
#
# This is free software, licensed under the MIT License.
# See /LICENSE for more information.
#
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#

name: prebuild OpenWrt

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'

env:
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: prebuild.config
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-1804)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir/upload
        sudo mkdir -p /cache/openwrt
        sudo chown -R $USER:$GROUPS /workdir
        sudo chown -R $USER:$GROUPS /cache

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        #git clone $REPO_URL -b $REPO_BRANCH openwrt
        git clone --depth 2 https://github.com/openwrt/openwrt.git -b openwrt-21.02 openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Update feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        rm -rf feeds/packages/net/smartdns
        rm -rf feeds/luci/application/luci-app-smartdns
        git clone https://github.com/lisakhan/openwrt-smartdns feeds/packages/net/smartdns
        ./scripts/feeds update package
        
    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make tools/install -j$(nproc)
        make toolchain/install -j$(nproc)
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
        mv build_dir /cache/openwrt
        mv staging_dir /cache/openwrt
        
    - name: Zip prebuild src
      uses: TheDoctor0/zip-release@0.6.0
      with: 
        type: 'tar'
        filename: 'upload/prebuild_src.tar.gz'
        exclusions: '*.git*'
        path: 'openwrt'
        directory: '/workdir'
        
    - name: Zip prebuild cache
      uses: TheDoctor0/zip-release@0.6.0
      with: 
        type: 'tar'
        filename: '/workdir/upload/prebuild_cache.tar.gz'
        exclusions: '*.git*'
        path: 'openwrt'
        directory: '/cache'

    - name: Check space usage
      if: (!cancelled())
      run: df -hT
      
    - name: Upload prebuild output to release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: 'prebuild'
        files: /workdir/upload/*

